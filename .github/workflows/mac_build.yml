name: Mac Build

on:
  push:
    branches:
    - main
    #- '**'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          brew install cmake
          brew install ccache
          brew install doxygen
          brew install lcov
          brew install gcovr

      - name: Install python dependencies
        run: |
          pip install sphinx breathe exhale furo sphinxcontrib-plantuml

      - name: Configure CMake
        run: cmake -S . -B build -DBUILD_TESTS=ON -DBUILD_COVERAGE=ON -DBUILD_PERF=ON -DBUILD_DOCS=ON -DBUILD_EXAMPLE=ON

      - name: Build oasvalidator
        run: cmake --build build --target oasvalidator --config Release

      - name: Build oasvalidator-unittests
        run: cmake --build build --target oasvalidator-unittests --config Release

      - name: Build oasvalidator-perftests
        run: cmake --build build --target oasvalidator-perftests --config Release

      - name: Run oasvalidator-perftests
        run: build/test/perftest/oasvalidator-perftests --benchmark_format=json > build/test/perftest/benchmark.json

      - name: Convert benchmark.json to benchmark.rst
        run: python .github/workflows/convert_json_to_rst.py build/test/perftest/benchmark.json build/docs/benchmark.rst

      - name: Build covhtml-oasvalidator
        run: cmake --build build --target covhtml-oasvalidator --config Release

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install PlantUML
        run: |
          brew install plantuml

      - name: Build docs
        run: cmake --build build --target docs --config Release

      - name: Copy covhtml-oasvalidator to docs
        run: cp -r build/covhtml-oasvalidator build/docs/html

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.MY_PAT }}
          publish_dir: build/docs/html

      - name: Generate Coverage Report
        if: github.ref == 'refs/heads/main'
        run: |
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          lcov --list coverage.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
